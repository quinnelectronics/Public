# Install Docker-Android with Portainer


Method 1)

# Step 1: Export the Container Configuration to a Stack
# 1. Open Portainer.
# 2. Go to **Containers** and find the container (docker-android) you want to save.
# 3. Click on the container name to open its details.
# 4. Click the **Duplicate/Edit** button (top-right).
# 5. Scroll down and click **Deploy the container**. 
#    - Portainer will re-create the container and keep it active.

# Step 2: Convert the Container to a Stack
# 1. Go to **Stacks** (left sidebar).
# 2. Click on **Add stack**.
# 3. Copy and paste the Docker Compose configuration for the container. 
#    Example:
#    version: '3'
#    services:
#      docker-android:
#        image: hqarroum/docker-android:latest
#        container_name: docker-android
#        ports:
#          - '6080:6080/tcp'
#        volumes:
#          - /robo-docker/containers/docker-android:/var/lib/android
#        environment:
#          ANDROID_SDK_ROOT: /var/lib/android/sdk
#        restart: always
#        cap_add:
#          - SYS_ADMIN
#          - NET_ADMIN

# 4. Save the stack and deploy it.

# Benefits
# - All settings (volumes, ports, environment variables, restart policies) are saved.
# - You can re-deploy it later on any Docker instance.
# - Changes are persistent even if you restart Docker or Portainer.


Method 2)

# Step 1: Log in to Portainer
# 1. Open a web browser and navigate to http://<your-server-ip>:9000
# 2. Log in with your Portainer admin credentials.

# Step 2: Add a New Container
# 1. Click on "Containers" in the left sidebar.
# 2. Click on the "Add container" button at the top-right.

# Step 3: Configure the Container
# 1. Container Name: Enter 'docker-android'.
# 2. Image: Enter 'hqarroum/docker-android:latest'.
# 3. Restart Policy: Set it to 'Always'.
# 4. Port Configuration:
#    - Click on "publish a new network port".
#    - Set host port to '6080' (or any port you want to access it from).
#    - Set container port to '6080' (this is the default port for VNC access).
#    - Protocol: Select TCP.

# Step 4: Configure Advanced Settings
# 1. Click on "Advanced container settings".
# 2. Volumes:
#    - Click "map additional volume".
#    - Set container path to '/var/lib/android' (this is where persistent files will be stored).
#    - Set host path to '/robo-docker/containers/docker-android' (or wherever you want the files stored).
#    - Volume Type: Select 'bind'.
#    - Writable: Ensure this option is checked (enabled) to allow read-write access.

# 3. Environment Variables (optional but recommended):
#    - Click "add environment variable".
#    - Add the following variable:
#      - Name: ANDROID_SDK_ROOT
#      - Value: /var/lib/android/sdk

# 4. Capabilities:
#    - Scroll down to the "Capabilities" section.
#    - Check the box for "SYS_ADMIN" to allow system administration permissions.
#    - Check the box for "NET_ADMIN" to allow network administration permissions.
#    - These capabilities allow the container to perform administrative tasks like mounting filesystems and configuring network interfaces, which may be required for certain Android apps.

# Step 5: Deploy the Container
# 1. Scroll down and click the "Deploy the container" button.
# 2. Wait for the container to be pulled and started.

# Step 6: Access Docker-Android
# 1. Open a web browser and navigate to http://<your-server-ip>:6080
# 2. You should now see the Android UI ready to use.

# Notes
# - You can change the ports as needed to avoid conflicts.
# - Make sure to persist volumes to avoid data loss after container restarts.
# - Check the Portainer logs for any issues if the container doesn't start properly.
